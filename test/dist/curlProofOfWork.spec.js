System.register(["@iota-pico/crypto/dist/tritHashers/curl", "@iota-pico/data/dist/data/trits", "@iota-pico/data/dist/data/trytes", "chai", "../../dist/curlProofOfWork"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var curl_1, trits_1, trytes_1, chai_1, curlProofOfWork_1;
    return {
        setters: [
            function (curl_1_1) {
                curl_1 = curl_1_1;
            },
            function (trits_1_1) {
                trits_1 = trits_1_1;
            },
            function (trytes_1_1) {
                trytes_1 = trytes_1_1;
            },
            function (chai_1_1) {
                chai_1 = chai_1_1;
            },
            function (curlProofOfWork_1_1) {
                curlProofOfWork_1 = curlProofOfWork_1_1;
            }
        ],
        execute: function () {
            describe("CurlProofOfWork", () => {
                it("can be created", () => {
                    const obj = new curlProofOfWork_1.CurlProofOfWork();
                    chai_1.default.should().exist(obj);
                });
                describe("pow", () => {
                    it("can successfully complete", async () => {
                        // tslint:disable-next-line:max-line-length
                        const trinaryString
                        const obj = new curlProofOfWork_1.CurlProofOfWork();
                        obj.initialize();
                        obj.pow(trytes_1.Trytes.create(trinaryString), 9)
                            .then((nonce) => {
                            const nonceString = nonce.toString();
                            chai_1.default.expect(nonceString).to.be.equal("BFIP9DKWUKOXDKNUJSZVCQQTTYACTONUCYXDTQOBZLVFUAY9VCHPFRPPXAJQXFYDFEAICDPSHFZIJGIMH");
                            const curlHash = new curl_1.Curl();
                            curlHash.initialize(Array.from(new Int32Array(curl_1.Curl.STATE_LENGTH)));
                            const transactionTrits = trits_1.Trits.fromTrytes(trytes_1.Trytes.create(trinaryString.substr(0, 2673 - 81).concat(nonceString)));
                            curlHash.absorb(transactionTrits, 0, transactionTrits.length());
                            const transactionHash = trits_1.Trits.fromValue(Array.from(new Int32Array(curl_1.Curl.HASH_LENGTH)));
                            curlHash.squeeze(transactionHash, 0, curl_1.Curl.HASH_LENGTH);
                            chai_1.default.expect(transactionHash.toTrytes().toString()).to.be.equal("9HZAYLWVBGUELDJNVCRQUTLTHIOJQ9SG9VMEPESEDEFMIMXLZJVGALMCNGRJEWVTQZBRGMNH9DKLOY999");
                        })
                            .catch(err => {
                            chai_1.default.assert.fail(err);
                        });
                    });
                });
            });
        }
    };
});
